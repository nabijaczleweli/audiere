cmake_minimum_required(VERSION 3.0)
project(audiere CXX C)
include(CheckIncludeFileCXX)


function(find_lib_or_static name optionname)
    find_library(lib NAMES ${name}_static ${name})
    if(${lib} MATCHES ".+-NOTFOUND")
        message(FATAL_ERROR "lib${name} not found, install it or set ${optionname} to OFF")
    endif(${lib} MATCHES ".+-NOTFOUND")

    if(${lib} MATCHES ".+_static.*")
        set(libraries ${libraries} ${name}_static PARENT_SCOPE)
    else(${lib} MATCHES ".+_static.*")
        set(libraries ${libraries} ${name} PARENT_SCOPE)
    endif(${lib} MATCHES ".+_static.*")
endfunction(find_lib_or_static)

function(find_include name optionname)
    CHECK_INCLUDE_FILE_CXX(${name} have_include)
    if(NOT ${have_include})
        message(FATAL_ERROR "${name} not found, install it or set ${optionname} to OFF")
    endif(NOT ${have_include})
endfunction(find_include)


if(${WIN32})
    set(USE_OSS_DEFAULT OFF)
    set(USE_DSOUND_DEFAULT ON)
else(${WIN32})
    set(USE_OSS_DEFAULT ON)
    set(USE_DSOUND_DEFAULT OFF)
endif(${WIN32})
set(USE_OGGVORBIS ON CACHE BOOL "Whether to include and link to oggvorbis")
set(USE_FLAC ON CACHE BOOL "Whether to include and link to flac")
set(USE_DUMB ON CACHE BOOL "Whether to include and link to dumb")
set(USE_OSS ${USE_OSS_DEFAULT} CACHE BOOL "Whether to include and link to oss, note: automatically disabled (as it's useless) on Windows")
set(USE_DSOUND ${USE_DSOUND_DEFAULT} CACHE BOOL "Whether to include and link to DirectSound, note: automatically disabled (as it's useless) on non-Windows")

if(${WIN32} AND ${USE_OSS})
    message("Disabling OSS on Windows...")
    set(USE_OSS OFF FORCE)
endif(${WIN32} AND ${USE_OSS})

if(NOT ${WIN32} AND ${USE_DSOUND})
    message("Disabling DirectSound on non-Windows...")
    set(USE_DSOUND OFF FORCE)
endif(NOT ${WIN32} AND ${USE_DSOUND})

set(macros)
list(APPEND macros AUDIERE_EXPORTS)
set(libraries)
list(APPEND libraries speex)
if(${WIN32})
    list(APPEND libraries winmm)
endif(${WIN32})
set(sources)
list(APPEND sources src/basic_source.cpp)
list(APPEND sources src/debug.cpp)
list(APPEND sources src/device.cpp)
list(APPEND sources src/device_mixer.cpp)
list(APPEND sources src/device_null.cpp)
list(APPEND sources src/device_mm.cpp)
list(APPEND sources src/dumb_resample.cpp)
list(APPEND sources src/file_ansi.cpp)
list(APPEND sources src/input.cpp)
list(APPEND sources src/input_aiff.cpp)
list(APPEND sources src/input_mp3.cpp)
list(APPEND sources src/input_wav.cpp)
list(APPEND sources src/input_speex.cpp)
list(APPEND sources src/loop_point_source.cpp)
list(APPEND sources src/memory_file.cpp)
list(APPEND sources src/mpaudec/bits.c)
list(APPEND sources src/mpaudec/mpaudec.c)
list(APPEND sources src/noise.cpp)
list(APPEND sources src/resampler.cpp)
list(APPEND sources src/sample_buffer.cpp)
list(APPEND sources src/sound.cpp)
list(APPEND sources src/sound_effect.cpp)
list(APPEND sources src/square_wave.cpp)
list(APPEND sources src/tone.cpp)
list(APPEND sources src/utility.cpp)
list(APPEND sources src/version.cpp)
list(APPEND sources src/speexfile/speexfile.cpp)
if(${WIN32})
    list(APPEND sources src/timer_win32.cpp)
    list(APPEND sources src/threads_win32.cpp)
else(${WIN32})
    list(APPEND sources src/timer_posix.cpp)
    list(APPEND sources src/threads_posix.cpp)
endif(${WIN32})

CHECK_INCLUDE_FILE_CXX("speex/speex.h" have_speex_includes)
if(NOT have_speex_includes)
    message(FATAL_ERROR "speex/speex.h not found, install it")
endif(NOT have_speex_includes)

if(${USE_OGGVORBIS})
    find_lib_or_static(vorbisfile USE_OGGVORBIS)
    find_lib_or_static(vorbis USE_OGGVORBIS)
    find_lib_or_static(ogg USE_OGGVORBIS)
    CHECK_INCLUDE_FILE_CXX("vorbis/vorbisfile.h" have_vorbis_includes)
    list(APPEND sources src/input_ogg.cpp)
    list(APPEND macros HAVE_OGG)
else(${USE_OGGVORBIS})
    list(APPEND macros NO_OGG)
endif(${USE_OGGVORBIS})

if(${USE_FLAC})
    if(${WIN32})
        find_lib_or_static(FLAC++ USE_FLAC)
        find_lib_or_static(FLAC USE_FLAC)
    else(${WIN32})
        find_lib_or_static(m USE_FLAC)
    endif(${WIN32})
    CHECK_INCLUDE_FILE_CXX("FLAC/all.h" have_flac_includes)
    list(APPEND sources src/input_flac.cpp)
    list(APPEND macros HAVE_FLAC)
else(${USE_FLAC})
    list(APPEND macros NO_FLAC)
endif(${USE_FLAC})

if(${USE_DUMB})
    find_lib_or_static(dumb USE_DUMB)
    CHECK_INCLUDE_FILE_CXX("dumb.h" have_dumb_includes)
    list(APPEND sources src/input_mod.cpp)
    list(APPEND macros HAVE_DUMB)
else(${USE_DUMB})
    list(APPEND macros NO_DUMB)
endif(${USE_DUMB})

if(${USE_OSS})
    CHECK_INCLUDE_FILE_CXX("unistd.h" have_oss_includes)
    CHECK_INCLUDE_FILE_CXX("sys/soundcard.h" have_oss_includes)
    list(APPEND macros HAVE_OSS)
else(${USE_OSS})
    list(APPEND macros NO_OSS)
endif(${USE_OSS})

if(${USE_DSOUND})
    find_lib_or_static(dsound USE_DSOUND)
    find_lib_or_static(ole32 USE_DSOUND)
    find_lib_or_static(rpcrt4 USE_DSOUND)
    CHECK_INCLUDE_FILE_CXX("dsound.h" have_dsound_includes)
    list(APPEND sources src/device_ds.cpp)
    list(APPEND sources src/device_ds_buffer.cpp)
    list(APPEND sources src/device_ds_stream.cpp)
    list(APPEND sources src/dxguid.cpp)
    list(APPEND macros HAVE_DSOUND)
else(${USE_DSOUND})
    list(APPEND macros NO_DSOUND)
endif(${USE_DSOUND})


add_library(audiere SHARED ${sources})
target_compile_definitions(audiere PRIVATE ${macros})
target_link_libraries(audiere ${libraries})
target_include_directories(audiere INTERFACE include)
install(TARGETS audiere DESTINATION lib)
INSTALL(FILES include/audiere.h DESTINATION include)
